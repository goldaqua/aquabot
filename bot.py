import configure
import telebot
from telebot import types # –∫–Ω–æ–ø–∫–∏
from string import Template

bot = telebot.TeleBot(configure.config['token'])

user_dict = {}

tovary = {
    "–í–æ–¥–∞ –≤ –±–∞–ª–ª–æ–Ω–µ 36 –≥—Ä–Ω": 36,
    '–ë–∞–ª–ª–æ–Ω —Å –≤–æ–¥–æ–π 170 –≥—Ä–Ω': 170,
    '–¢—Ä—É–±–æ—á–∫–∞ –¥–ª—è –ø–æ–º–ø—ã (1 —á–∞—Å—Ç—å) 15 –≥—Ä–Ω': 15,
    '–ù–æ—Å–∏–∫ –¥–ª—è –ø–æ–º–ø—ã 25 –≥—Ä–Ω': 25,
    '–ü–æ–º–ø–∞ –µ–∫–æ–Ω–æ–º 80 –≥—Ä–Ω': 80,
    '–ü–æ–º–ø–∞ —É–ª—É—á—à–µ–Ω–Ω–∞—è 100 –≥—Ä–Ω': 100,
    '–ë–∞–ª–ª–æ–Ω + –ø–æ–º–ø–∞ –µ–∫–æ–Ω–æ–º + –≤–æ–¥–∞ 230 –≥—Ä–Ω': 230,
    '–ë–∞–ª–ª–æ–Ω + –ø–æ–º–ø–∞ —É–ª—É—á—à–µ–Ω–Ω–∞—è + –≤–æ–¥–∞ 250 –≥—Ä–Ω': 250
}


class User:
    def __init__(self, city):
        self.city = city
        self.adres = None
        self.tovar = {}
        self.phone = None
        self.prim = None

    @property
    def summa(self):
        output = 0
        for k, v in self.tovar.items():
            output += tovary[k] * v
        return output


def kbs(buttons, one_time_keyboard=True, row_width=None):
    kb = types.ReplyKeyboardMarkup(
        resize_keyboard=True,
        one_time_keyboard=one_time_keyboard,
        row_width=row_width or len(buttons)//2
    )
    kb.add(*[types.KeyboardButton(i) for i in buttons])
    return kb


@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup_menu = kbs(['–û –Ω–∞—Å üè¢', '–ó–∞–∫–∞–∑–∞—Ç—å üìù', '–ö–∞–∫ —Å—Ç–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–º –ê–∫–≤–∞—Å–≤–∏—Ç üôã‚Äç‚ôÇÔ∏è', '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû', '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã ‚è∞'])
    bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è \"–ê–∫–≤–∞—Å–≤–∏—Ç\"" + " üëã" + " "
    + message.from_user.first_name
    + ", –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª.", reply_markup=markup_menu)


@bot.message_handler(content_types=["text"])
def user_reg(message):
    if message.text == '–ó–∞–∫–∞–∑–∞—Ç—å üìù':
        markup = kbs(['–ë–∞—Ö–º—É—Ç', '–ß–∞—Å–æ–≤ –Ø–†', '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∫–∞', '–¢–æ—Ä–µ—Ü–∫ (–î–∑–µ—Ä–∂–∏–Ω—Å–∫)'])
        msg = bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–µ—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=markup)
        bot.register_next_step_handler(msg, process_city_step)
    elif message.text == '–û –Ω–∞—Å üè¢':
        bot.send_message(message.chat.id, "–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è \"–ê–∫–≤–∞—Å–≤–∏—Ç\" —É–∂–µ 15 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –° –∫–∞–∂–¥—ã–º –≥–æ–¥–æ–º –º—ã —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–µ–º—Å—è –∏ –¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ –¥–ª—è —Ç–æ–≥–æ," 
        + " —á—Ç–æ–±—ã –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ —É–¥–æ–±–Ω–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ —Å –Ω–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å.")
        bot.send_message(message.chat.id," –ù–∞—à–∞ –≤–æ–¥–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–ø–æ–∞—Å—Ç—å –∫ –≤–∞–º –≤ –¥–æ–º/–æ—Ñ–∏—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ª–æ–∂–Ω—ã–µ —ç—Ç–∞–ø—ã –æ—Ç—á–∏—Å—Ç–∫–∏:" 
        	+"\n1. ‚úÖ –ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—è—Ç—å—é –≤–∏–¥–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤."
        	+"\n2. ‚úÖ–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–∞—è —É–≥–æ–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–Ω–∞."
        	+"\n3. ‚úÖ–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–∞—è –∫–æ–ª–æ–Ω–Ω–∞."
        	+"\n4. ‚úÖ–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –º–µ–º–±—Ä–∞–Ω—ã —Å –æ—Ç–≤–µ—Ä—Å—Ç–∏—è–º–∏ –≤ –æ–¥–Ω—É –¥–µ—Å—è—Ç–∏—Ç—ã—Å—è—á–Ω—É—é –º–∏–∫—Ä–æ–Ω–∞."
        	+"\n5. ‚úÖ–ú–∏–Ω–µ—Ä–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –¥–æ–∑–∞—Ç–æ—Ä–æ–≤."
        	+"\n6. ‚úÖ–ü–æ—Å—Ç—Ñ–∏–ª—å—Ç—Ä—ã —Å —É–≥–ª—è–º–∏ –∏–∑ —Å–∫–æ—Ä–ª—É–ø—ã –∫–æ–∫–æ—Å–æ–≤–æ–≥–æ –æ—Ä–µ—Ö–∞ –∏ —Ü–µ–æ–ª–∏—Ç–æ–≥–æ-—à—É–Ω–≥–∏—Ç–æ–≤—ã–π —Å —É–≥–ª–µ–º –∏ —Å–µ—Ä–µ–±—Ä–æ–º."
        	+"\n7. ‚úÖ–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–æ–º.")
        bot.send_message(message.chat.id,"‚ùóÔ∏è –ü–æ—Å—Ç–∞–≤—â–∏–∫ –≤–æ–¥—ã –ø–æ –ø—Ä–æ—Å—å–±–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–æ–¥—ã.")
    elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû':
        bot.send_message(message.chat.id, "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: –î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª, –≥. –ë–∞—Ö–º—É—Ç, —É–ª. –Æ–±–∏–ª–µ–π–Ω–∞—è, 50 –º–∞–≥–∞–∑–∏–Ω \"–ê–∫–≤–∞—Å–≤–∏—Ç\""
        + "\n–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –î–∏—Å–ø–µ—Ç—á–µ—Ä–∞: \n050-537-82-49 \n066-420-94-50 \n050-041-28-29 \n066-226-91-00 \n067-745-27-28 \n093-165-02-06")
    elif message.text == '–ö–∞–∫ —Å—Ç–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–º –ê–∫–≤–∞—Å–≤–∏—Ç üôã‚Äç‚ôÇÔ∏è':
        markup = kbs(['–ó–∞–∫–∞–∑–∞—Ç—å üìù', '–í–µ—Ä–Ω—É—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
        msg = bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–º –∫–æ–º–ø–∞–Ω–∏–∏ –ê–∫–≤–∞—Å–≤–∏—Ç, –Ω—É–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–æ–º–ø–ª–µ–∫—Ç:'
        	+ '\n–ë–∞–ª–ª–æ–Ω + –ø–æ–º–ø–∞ –µ–∫–æ–Ω–æ–º + –≤–æ–¥–∞ 230 –≥—Ä–Ω \n–∏–ª–∏ \n–ë–∞–ª–ª–æ–Ω + –ø–æ–º–ø–∞ —É–ª—É—á—à–µ–Ω–Ω–∞—è + –≤–æ–¥–∞ 250 –≥—Ä–Ω', reply_markup=markup)
    elif message.text == '–í–µ—Ä–Ω—É—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        send_welcome(message)
    elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å üìù':
        user_reg(message)
    elif message.text == '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã ‚è∞':
        bot.send_message(message.chat.id, "–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: üöö"
        	+"\n –ü–ù-–ü–¢: 8:00-17:00"
        	+"\n –°–ë: 8:00-16:00"
        	+"\n –í–°: –í—ã—Ö–æ–¥–Ω–æ–π")
def process_city_step(message):
    try:
        chat_id = message.chat.id
        user_dict[chat_id] = User(message.text)

        # —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = types.ReplyKeyboardRemove(selective=False)

        msg = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:', reply_markup=markup)
        bot.register_next_step_handler(msg, process_adres)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_adres(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.adres = message.text

        return process_tovar(message)
    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_tovar(message):
    user = user_dict[message.chat.id]
    available_items = list(tovary) + ['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚úÖ', '–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É üóë']
    chosen_items = []

    def inner(message):
        nonlocal chosen_items, available_items
        try:
            if message.text == '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚úÖ':
                bot.send_message(message.chat.id, "–í–∞—à–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏:\n" + get_items_string(user.tovar, '\n'))
                msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 0–•–•YYYYYYY')
                return bot.register_next_step_handler(msg, process_phone)
            elif message.text == '–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É üóë':
                bot.send_message(message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞')
                return process_tovar(message)
            elif message.text in available_items:
                available_items.remove(message.text)
                chosen_items.append(message.text)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞', reply_markup=kbs(['1', '2', '3', '4']))
                return bot.register_next_step_handler(message, ask_number, message.text)
            else:
                raise ValueError
        except ValueError: # if item not in available items
            bot.send_message(message.chat.id, "–í–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã")
            return bot.register_next_step_handler(message, inner)
        else:
            bot.register_next_step_handler(message, inner)

    def ask_number(message, item):
        nonlocal user
        try:
            amount = int(message.text)
        except ValueError:
            bot.send_message(message.text, '–í–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞')
            return bot.register_next_step_handler(message, ask_number, item)
        else:
            user.tovar[item] = amount
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –µ—â—ë —Ç–æ–≤–∞—Ä—ã', reply_markup=kbs(available_items, row_width=1))
            return bot.register_next_step_handler(message, inner)

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∫–∏ —Å—Ä–µ–¥–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã—Ö",
        reply_markup=kbs(available_items, row_width=1)
    )
    bot.register_next_step_handler(message, inner)


def process_phone(message):
    try:
        int(message.text)

        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.phone = message.text

        msg = bot.send_message(chat_id, '–í–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–Ω–µ—Ç"')
        bot.register_next_step_handler(msg, process_prim)
    except Exception as e:
        msg = bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')
        bot.register_next_step_handler(msg, process_phone)


def process_prim(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.prim = message.text

        if user.city == "–¢–æ—Ä–µ—Ü–∫ (–î–∑–µ—Ä–∂–∏–Ω—Å–∫)" or user.city == "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∫–∞":
        	bot.send_message(chat_id, getRegData(user, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞', message.from_user.first_name), parse_mode="Markdown")
        	bot.send_message(message.chat.id, "–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Ç–∏—á–µ–Ω–∏–∏ 2-3 —á–∞—Å–æ–≤." + "\n –ü–æ  –≥. –ß–∞—Å–æ–≤ –Ø–† –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —Å—Ä–µ–¥–∞–º, –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –¥–Ω—è."
            	+ "\n –í —Å–ª—É—á–∏–∏ –æ—Ç–º–µ–Ω—ã –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ—Å–∏–º –≤–∞—Å –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É —Ç–µ–ª. 050-537-82-49 \nC –£–≤. –ê–∫–≤–∞—Å–≤–∏—Ç")
        	send_welcome(message)
        	# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
        	bot.send_message(735422335, getRegData(user, '–ó–∞—è–≤–∫–∞ –æ—Ç –±–æ—Ç–∞', bot.get_me().username), parse_mode="Markdown")        	
        else:
        # –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        	bot.send_message(chat_id, getRegData(user, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞', message.from_user.first_name), parse_mode="Markdown")
        	bot.send_message(message.chat.id, "–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Ç–∏—á–µ–Ω–∏–∏ 2-3 —á–∞—Å–æ–≤." + "\n –ü–æ  –≥. –ß–∞—Å–æ–≤ –Ø–† –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —Å—Ä–µ–¥–∞–º, –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –¥–Ω—è."
            	+"\n–ü–æ –≥. –î–∑–µ—Ä–∂–∏–Ω—Å–∫ (–¢–æ—Ä–µ—Ü–∫) –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Å—Ä–µ–¥–∞–º –∏ —Å—É–±–±–æ—Ç–∞–º." 
            	+"\n –í —Å–ª—É—á–∏–∏ –æ—Ç–º–µ–Ω—ã –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ—Å–∏–º –≤–∞—Å –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É —Ç–µ–ª. 050-537-82-49 \nC –£–≤. –ê–∫–≤–∞—Å–≤–∏—Ç")
        	send_welcome(message)
        	# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
        	bot.send_message(1413116688, getRegData(user, '–ó–∞—è–≤–∫–∞ –æ—Ç –±–æ—Ç–∞', bot.get_me().username), parse_mode="Markdown")

    except Exception as e:
        bot.reply_to(message, '–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!')


def get_items_string(dct:dict, sep:str=', '):
    return sep.join([f"{k} ({v} —à—Ç.)" for k, v in dct.items()])


# —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≤–∏–¥ –∑–∞—è–≤–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
# –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ Template
# –≤ send_message –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å parse_mode="Markdown"
def getRegData(user, title, name):
    t = Template('$title *$name* \n –ì–æ—Ä–æ–¥: *$userCity* \n –ê–¥—Ä–µ—Å—Å: *$adres* \n –¢–æ–≤–∞—Ä: *$tovar* \n –¢–µ–ª–µ—Ñ–æ–Ω: *$phone* \n –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: *$prim* \n –ö –æ–ø–ª–∞—Ç–µ –∫—É—Ä—å–µ—Ä—É: *$summa* –≥—Ä–Ω.')

    return t.substitute({
        'title': title,
        'name': name,
        'userCity': user.city,
        'adres': user.adres,
        'tovar': get_items_string(user.tovar),
        'phone': user.phone,
        'prim': user.prim,
        'summa': user.summa,
    })

@bot.message_handler(content_types=["text"])   
def mine1(message):
    if message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_welcome(message)

@bot.message_handler(content_types=["text"])
def send_help(message):
    bot.send_message(message.chat.id, '/start')   
# –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=["photo"])
def send_help_text(message):
    bot.send_message(message.chat.id, '/start')


bot.polling(none_stop=True)